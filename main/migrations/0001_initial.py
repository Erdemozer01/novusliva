# Generated by Django 5.2.4 on 2025-08-24 00:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('story_title', models.CharField(max_length=200, verbose_name='Hikaye Başlığı')),
                ('story_subtitle', models.CharField(max_length=100, verbose_name='Hikaye Alt Başlığı')),
                ('story_description', models.TextField(verbose_name='Hikaye Açıklaması')),
                ('bullet_point_1', models.CharField(max_length=255, verbose_name='Madde 1')),
                ('bullet_point_2', models.CharField(max_length=255, verbose_name='Madde 2')),
                ('bullet_point_3', models.CharField(max_length=255, verbose_name='Madde 3')),
                ('image', models.ImageField(upload_to='about/', verbose_name='Hakkımızda Sayfası Resmi')),
                ('video_url', models.URLField(blank=True, help_text='YouTube veya Vimeo linki.', verbose_name='Video Linki')),
            ],
            options={
                'verbose_name': 'Hakkımızda Sayfası',
                'verbose_name_plural': 'Hakkımızda Sayfası',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('slug', models.SlugField(max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Blog Kategorisi',
                'verbose_name_plural': 'Blog Kategorileri',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Müşteri Adı')),
                ('logo', models.ImageField(upload_to='client_logos/', verbose_name='Müşteri Logosu')),
            ],
            options={
                'verbose_name': 'Müşteri',
                'verbose_name_plural': 'Müşteriler',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Adı Soyadı')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta Adresi')),
                ('subject', models.CharField(max_length=200, verbose_name='Konu')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu olarak işaretle')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Gönderilme Tarihi')),
            ],
            options={
                'verbose_name': 'İletişim Formu Mesajı',
                'verbose_name_plural': 'İletişim Formu Mesajları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('slug', models.SlugField(max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Portfolyo Kategorisi',
                'verbose_name_plural': 'Portfolyo Kategorileri',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('icon_class', models.CharField(max_length=100, verbose_name='İkon Sınıfı (Bootstrap Icons)')),
                ('color_class', models.CharField(max_length=50, verbose_name='Renk Sınıfı (örn: item-cyan)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_images/', verbose_name='Hizmet Detay Görseli')),
            ],
            options={
                'verbose_name': 'Hizmet',
                'verbose_name_plural': 'Hizmetler',
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Adres')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon Numarası')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta Adresi')),
                ('twitter_url', models.URLField(blank=True, null=True, verbose_name='Twitter Linki')),
                ('facebook_url', models.URLField(blank=True, null=True, verbose_name='Facebook Linki')),
                ('instagram_url', models.URLField(blank=True, null=True, verbose_name='Instagram Linki')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='LinkedIn Linki')),
            ],
            options={
                'verbose_name': 'Site Ayarı',
                'verbose_name_plural': 'Site Ayarları',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Yetenek Adı (örn: HTML)')),
                ('percentage', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Yüzde Değeri (1-100 arası)')),
                ('order', models.PositiveIntegerField(default=0, help_text='Sıralama için kullanılır.')),
            ],
            options={
                'verbose_name': 'Yetenek',
                'verbose_name_plural': 'Yetenekler',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-posta Adresi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Abonelik Tarihi')),
            ],
            options={
                'verbose_name': 'Bülten Abonesi',
                'verbose_name_plural': 'Bülten Aboneleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Etiket Adı')),
                ('slug', models.SlugField(max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Etiket',
                'verbose_name_plural': 'Etiketler',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Adı Soyadı')),
                ('title', models.CharField(max_length=100, verbose_name='Unvanı')),
                ('photo', models.ImageField(upload_to='team_photos/', verbose_name='Fotoğraf')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter Linki')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook Linki')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram Linki')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn Linki')),
                ('order', models.PositiveIntegerField(default=0, help_text='Sıralama için kullanılır (küçük sayı önce gelir).')),
            ],
            options={
                'verbose_name': 'Ekip Üyesi',
                'verbose_name_plural': 'Ekip Üyeleri',
                'ordering': ['order', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Adı Soyadı')),
                ('title', models.CharField(max_length=100, verbose_name='Unvanı (örn: CEO, Designer)')),
                ('comment', models.TextField(verbose_name='Yorum')),
                ('photo', models.ImageField(upload_to='testimonials/', verbose_name='Fotoğraf')),
                ('rating', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Puan (1-5 arası)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'Müşteri Yorumu',
                'verbose_name_plural': 'Müşteri Yorumları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Açıklaması (SEO için)')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(upload_to='blog_images/', verbose_name='Görsel')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('published', 'Yayınlandı')], default='draft', max_length=10, verbose_name='Durum')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Yazar')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='main.category', verbose_name='Kategori')),
                ('tags', models.ManyToManyField(blank=True, related_name='blog_posts', to='main.tag', verbose_name='Etiketler')),
            ],
            options={
                'verbose_name': 'Blog Yazısı',
                'verbose_name_plural': 'Blog Yazıları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Adı Soyadı')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta Adresi')),
                ('body', models.TextField(verbose_name='Yorum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('active', models.BooleanField(default=False, verbose_name='Aktif (Onaylandı)')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.blogpost', verbose_name='Yazı')),
            ],
            options={
                'verbose_name': 'Yorum',
                'verbose_name_plural': 'Yorumlar',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('status', models.CharField(choices=[('cart', 'Sepette'), ('pending', 'Ödeme Bekleniyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='cart', max_length=20, verbose_name='Durum')),
                ('payment_method', models.CharField(blank=True, choices=[('credit_card', 'Kredi Kartı'), ('debit_card', 'Banka Kartı'), ('bank_transfer', 'Havale/EFT'), ('cash', 'Nakit Ödeme')], max_length=20, null=True, verbose_name='Ödeme Yöntemi')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Ödeme Tarihi')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='İşlem ID')),
                ('billing_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fatura Adı')),
                ('billing_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Fatura E-posta')),
                ('billing_address', models.TextField(blank=True, null=True, verbose_name='Fatura Adresi')),
                ('billing_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Şehir')),
                ('billing_postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Posta Kodu')),
                ('stripe_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Sipariş/Sepet',
                'verbose_name_plural': 'Siparişler/Sepetler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Proje Başlığı')),
                ('short_description', models.CharField(max_length=255, verbose_name='Kısa Açıklama')),
                ('long_description', models.TextField(verbose_name='Uzun Açıklama')),
                ('client', models.CharField(blank=True, max_length=200, verbose_name='Müşteri')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Açıklaması')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('project_date', models.DateField(blank=True, null=True, verbose_name='Proje Tarihi')),
                ('project_url', models.URLField(blank=True, verbose_name='Proje Linki')),
                ('main_image', models.ImageField(upload_to='portfolio_images/', verbose_name='Ana Görsel')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Fiyat (TL)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='main.portfoliocategory', verbose_name='Kategori')),
            ],
            options={
                'verbose_name': 'Portfolyo Öğesi',
                'verbose_name_plural': 'Portfolyo Öğeleri',
                'ordering': ['-project_date'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='portfolio_images/details/', verbose_name='Ek Resim')),
                ('portfolio_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.portfolioitem', verbose_name='Ait Olduğu Proje')),
            ],
            options={
                'verbose_name': 'Proje Resmi',
                'verbose_name_plural': 'Proje Resimleri',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Birim Fiyat')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Adet')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.order', verbose_name='Sipariş')),
                ('portfolio_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='main.portfolioitem', verbose_name='Proje')),
            ],
            options={
                'verbose_name': 'Sipariş Kalemi',
                'verbose_name_plural': 'Sipariş Kalemleri',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='Hakkında')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Telefon Numarası')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='Ülke')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='Şehir')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Adres')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Posta Kodu')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Profil',
                'verbose_name_plural': 'Profiller',
            },
        ),
    ]
